// Border-box Sizing
*{ @include css3(box-sizing, border-box); }

// List Style Reset
%no-list{ margin: 0; padding: 0; list-style: none; }

// Containers
img{ max-width: 100%; }

.container{  
    @include clearfix();
    max-width: $page-width;
    margin: 0 auto;
    
    &.primary{
        max-width: $page-width + ($column-gutter * 2);
    }
    
    &.padded{  
        padding: 1em 0;    
    }
}

// Grid Elements
.grid{  
    @extend %no-list;
    @extend .cf;  
    list-style: none;
    margin: 0;    
    padding: 0;
    margin-left: $column-gutter * -1;   

    &.tight-grid{ 
        margin-left: $column-gutter/2 * -1;
    }

    &.no-spacing{
        margin-left: 0;
    }
}

.grid-unit{
    width: 100%;    
    padding-left: $column-gutter;
    float: left;
    
    &.centered{ margin: 0 auto; float: none; }

    .tight-grid & {
        padding-left: $column-gutter/2;
    }

    .no-spacing &{
        padding-left: 0;
    }
}

@mixin device-type($namespace:"") { 
    /* Whole */
    .#{$namespace}-whole{ width: 100%; }

    /* Halves */
    .#{$namespace}-one-half{ width: 50%; }

    /* Thirds */
    .#{$namespace}-one-third{ width: 33.33333%; }
    .#{$namespace}-two-thirds{ width: 66.66666%; }

    /* Quarters */
    .#{$namespace}-one-quarter{ width: 25%; }
    .#{$namespace}-two-quarters{ @extend .#{$namespace}-one-half; }
    .#{$namespace}-three-quarters{ width: 75%; }

    /* Sixths */
    .#{$namespace}-one-sixth { width: 16.66666%; }
    .#{$namespace}-two-sixths { @extend .#{$namespace}-one-third; }
    .#{$namespace}-three-sixths { @extend .#{$namespace}-one-half; }
    .#{$namespace}-four-sixths { @extend .#{$namespace}-two-thirds; }
    .#{$namespace}-five-sixths { width: 83.33333%; }

    /* Twelfths */
    .#{$namespace}-one-twelfth { width: 8.33333%; }
    .#{$namespace}-two-twelfths { @extend .#{$namespace}-one-sixth; }
    .#{$namespace}-three-twelfths { @extend .#{$namespace}-one-quarter; }
    .#{$namespace}-four-twelfths { @extend .#{$namespace}-one-third; }
    .#{$namespace}-five-twelfths { width: 41.66666% }
    .#{$namespace}-six-twelfths { @extend .#{$namespace}-one-half; }
    .#{$namespace}-seven-twelfths { width: 58.33333%; }
    .#{$namespace}-eight-twelfths { @extend .#{$namespace}-two-thirds; }
    .#{$namespace}-nine-twelfths { @extend .#{$namespace}-three-quarters; }
    .#{$namespace}-ten-twelfths { @extend .#{$namespace}-five-sixths; }
    .#{$namespace}-eleven-twelfths { width: 91.66666%; }
}

@mixin create-columns {
    @for $i from 1 through $column-count {
        @if $i == 1 {
            .one-#{$column-count-label} { width: 8.33333%; }
        } @elseif $i == $column-count {  
            .whole { width: 100%; float: none; clear: both; }
        } @else{ 
            .#{convert-number-to-word($i)}-#{$column-count-label + "s"} { width: calc-percent($i, $column-count); }
        }
    }
}

// Set classes for mobile viewport
@include device-type("mobile");

@include respond-to($small-tablet-breakpoint) {  
    @include device-type("tablet");    
}

// Set classes for desktop viewports
@include respond-to($desktop-breakpoint) {
            
    @include create-columns();
    
    .grid-unit{          
        &.push-left-one-#{$column-count-label}{
            margin-left: calc-percent(1 * $column-width, $page-width);
        }
        &.push-left-two-#{$column-count-label + "s"}{
            margin-left: calc-percent(2 * $column-width, $page-width);
        }
        &.push-left-three-#{$column-count-label + "s"}{
            margin-left: calc-percent(3 * $column-width, $page-width);
        }
        &.push-left-four-#{$column-count-label + "s"}{
            margin-left: calc-percent(4 * $column-width, $page-width);
        }
        &.push-left-five-#{$column-count-label + "s"}{
            margin-left: calc-percent(5 * $column-width, $page-width);
        }
        &.push-left-six-#{$column-count-label + "s"}{
            margin-left: calc-percent(6 * $column-width, $page-width);
        }
        &.push-right-one-#{$column-count-label + "s"}{
            margin-right: calc-percent(1 * $column-width, $page-width);
        }
    }
    
}

@include respond-to($super-desktop-breakpoint){
    @include device-type("super");
}

.lt-ie9{
    @include create-columns();
}


